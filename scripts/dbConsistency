#!/bin/bash

main() {
  init_files
  find_max_line_in_db
  consistency_check
  fix_consistency
  cleanup
}

init_files() {
  # append extra newline in healthcheck to help read
  if [ ! -e "./healthcheck.txt" ];then
    echo "missing healthcheck.txt file, please run healthcheck service first"
    exit 0
  fi
  cat "./healthcheck.txt" > "./healthcheck_tmp"
  healthcheck="./healthcheck_tmp"
}

cleanup() {
  # remove healthcheck_tmp
  rm -f $healthcheck
}

find_max_line_in_db() {
  while IFS=" " read host status line_in_db db; do
    # ignore hosts that are down
    if [ "$status" = "DOWN" ];then
      echo "warning: $host is down"
      continue
    fi
    # look for host with maximum db
    if [ -z "$host_with_max_line_in_db" ];then
      host_with_max_line_in_db=$host
      max_line_in_db=$line_in_db
    elif [[ "$max_line_in_db" -lt "$line_in_db" ]];then
      host_with_max_line_in_db=$host
      max_line_in_db=$line_in_db 
    fi
  done < $healthcheck
  if [ -z $host_with_max_line_in_db ];then
	  echo "warning: every host is down, no consistency check or recovery performed"
	  cleanup
	  exit 0
  fi
}

consistency_check() {
  echo "running consistency check"
  # array of hosts that have inconsistent db
  inconsistent=()
  while IFS=" " read host status line_in_db db; do
    # ignore hosts that are down
    if [ "$status" == "DOWN" ];then
      continue
    fi
    if [[ "$line_in_db" -lt "$max_line_in_db" ]];then
      inconsistent+=($host)
      echo "$host has "$(($max_line_in_db - $line_in_db))" lines of inconsistentcy"
    fi
  done < $healthcheck
  if [ ${#inconsistent[@]} -eq 0 ];then
    echo "All hosts are consistent"
    cleanup
    exit 0
  fi
}

fix_consistency() {
  # fix all inconsistent hosts by copying the host with max line of db
  for host in "${inconsistent[@]}"
  do
    scp "$host_with_max_line_in_db:/virtual/database.txt" "$host:/virtual/"
    if [ $? -eq 0 ];then
      echo "$host: fixed inconsistency"
    else
      echo "warning: $host: failed to fix inconsistency"
    fi
  done
}

main
